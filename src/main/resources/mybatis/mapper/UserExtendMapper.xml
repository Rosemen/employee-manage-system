<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.scau.employee.mapper.UserExtendMapper">
    <resultMap id="BaseResultMap" type="cn.edu.scau.employee.entity.User">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="role_id" jdbcType="BIGINT" property="roleId"/>
        <result column="user_detail_id" jdbcType="BIGINT" property="userDetailId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, username, password, role_id, user_detail_id, create_time, update_time
    </sql>

    <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        <where>
            <if test="null != username and username != ''">
                and locate(#{username, jdbcType=VARCHAR}, username)
            </if>
        </where>
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
    </select>

    <delete id="deleteByIds" parameterType="java.util.List">
        delete from user
        where id in
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id,jdbcType=INTEGER}
        </foreach>
    </delete>

    <update id="updateByRoleIds">
        update user
        set role_id = #{roleId}
        where role_id in
        <foreach collection="roleIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
</mapper>